# Generated by Django 3.2.8 on 2023-05-05 23:31

import chat3.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('chat3', '0001_initial'),
    ]

    operations = [
        migrations.RenameField(
            model_name='vote',
            old_name='description_for_the_theme',
            new_name='description_discussion',
        ),
        migrations.AddField(
            model_name='chat',
            name='vote',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_votes', to='chat3.vote'),
        ),
        migrations.AlterField(
            model_name='vote',
            name='files',
            field=models.FileField(blank=True, upload_to=chat3.models.uplodvote, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'zip', 'doc', 'jpg', 'png'])]),
        ),
        migrations.RemoveField(
            model_name='vote',
            name='list_of_people_who_vote',
        ),
        migrations.AddField(
            model_name='vote',
            name='list_of_people_who_vote',
            field=models.ManyToManyField(blank=True, related_name='votes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='vote',
            name='voting_questions',
        ),
        migrations.CreateModel(
            name='Voting_Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('vote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='chat3.vote')),
            ],
        ),
        migrations.AddField(
            model_name='vote',
            name='voting_questions',
            field=models.ManyToManyField(blank=True, related_name='votes', to='chat3.Voting_Questions'),
        ),
    ]
